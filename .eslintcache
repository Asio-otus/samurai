[{"D:\\Web\\social-network\\src\\index.tsx":"1","D:\\Web\\social-network\\src\\reportWebVitals.ts":"2","D:\\Web\\social-network\\src\\redux\\store.ts":"3","D:\\Web\\social-network\\src\\App.tsx":"4","D:\\Web\\social-network\\src\\redux\\profile-reducer.ts":"5","D:\\Web\\social-network\\src\\redux\\dialogs-reducer.ts":"6","D:\\Web\\social-network\\src\\redux\\users-reducer.ts":"7","D:\\Web\\social-network\\src\\components\\Header\\Header.tsx":"8","D:\\Web\\social-network\\src\\components\\Navbar\\Navbar.tsx":"9","D:\\Web\\social-network\\src\\components\\Profile\\Profile.tsx":"10","D:\\Web\\social-network\\src\\components\\Dialogs\\DialogsContainer.tsx":"11","D:\\Web\\social-network\\src\\components\\Users\\UsersContainer.tsx":"12","D:\\Web\\social-network\\src\\components\\Dialogs\\Dialogs.tsx":"13","D:\\Web\\social-network\\src\\components\\Users\\Users.tsx":"14","D:\\Web\\social-network\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx":"15","D:\\Web\\social-network\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx":"16","D:\\Web\\social-network\\src\\components\\common\\Preloader\\Preloader.tsx":"17","D:\\Web\\social-network\\src\\components\\Dialogs\\DialogsItem\\DialogsItem.tsx":"18","D:\\Web\\social-network\\src\\components\\Dialogs\\Messages\\Messages.tsx":"19","D:\\Web\\social-network\\src\\components\\Profile\\MyPosts\\MyPosts.tsx":"20","D:\\Web\\social-network\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx":"21","D:\\Web\\social-network\\src\\components\\Profile\\ProfileContainer.tsx":"22","D:\\Web\\social-network\\src\\redux\\auth-reducer.ts":"23","D:\\Web\\social-network\\src\\components\\Header\\HeaderContainer.tsx":"24","D:\\Web\\social-network\\src\\api\\api.ts":"25"},{"size":705,"mtime":1612523358069,"results":"26","hashOfConfig":"27"},{"size":440,"mtime":1612523358072,"results":"28","hashOfConfig":"27"},{"size":1046,"mtime":1613827526688,"results":"29","hashOfConfig":"27"},{"size":1083,"mtime":1613472550537,"results":"30","hashOfConfig":"27"},{"size":1991,"mtime":1613472550761,"results":"31","hashOfConfig":"27"},{"size":1902,"mtime":1612523358070,"results":"32","hashOfConfig":"27"},{"size":4745,"mtime":1613832329130,"results":"33","hashOfConfig":"27"},{"size":405,"mtime":1613472550558,"results":"34","hashOfConfig":"27"},{"size":716,"mtime":1613472550596,"results":"35","hashOfConfig":"27"},{"size":493,"mtime":1613472550632,"results":"36","hashOfConfig":"27"},{"size":732,"mtime":1612523358058,"results":"37","hashOfConfig":"27"},{"size":2972,"mtime":1613833175339,"results":"38","hashOfConfig":"27"},{"size":1728,"mtime":1612523358057,"results":"39","hashOfConfig":"27"},{"size":2039,"mtime":1613832211954,"results":"40","hashOfConfig":"27"},{"size":450,"mtime":1613472550672,"results":"41","hashOfConfig":"27"},{"size":772,"mtime":1613472550620,"results":"42","hashOfConfig":"27"},{"size":232,"mtime":1612523358068,"results":"43","hashOfConfig":"27"},{"size":462,"mtime":1612523358059,"results":"44","hashOfConfig":"27"},{"size":283,"mtime":1612523358060,"results":"45","hashOfConfig":"27"},{"size":1111,"mtime":1612523358063,"results":"46","hashOfConfig":"27"},{"size":573,"mtime":1612523358064,"results":"47","hashOfConfig":"27"},{"size":1013,"mtime":1613472550658,"results":"48","hashOfConfig":"27"},{"size":771,"mtime":1613472550748,"results":"49","hashOfConfig":"27"},{"size":1002,"mtime":1613472550569,"results":"50","hashOfConfig":"27"},{"size":622,"mtime":1613833098425,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"58mj9",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Web\\social-network\\src\\index.tsx",[],["107","108"],"D:\\Web\\social-network\\src\\reportWebVitals.ts",[],"D:\\Web\\social-network\\src\\redux\\store.ts",[],"D:\\Web\\social-network\\src\\App.tsx",[],"D:\\Web\\social-network\\src\\redux\\profile-reducer.ts",[],"D:\\Web\\social-network\\src\\redux\\dialogs-reducer.ts",[],"D:\\Web\\social-network\\src\\redux\\users-reducer.ts",[],"D:\\Web\\social-network\\src\\components\\Header\\Header.tsx",[],"D:\\Web\\social-network\\src\\components\\Navbar\\Navbar.tsx",[],"D:\\Web\\social-network\\src\\components\\Profile\\Profile.tsx",[],"D:\\Web\\social-network\\src\\components\\Dialogs\\DialogsContainer.tsx",["109"],"import React from 'react';\r\nimport {sendMessageAC, updateNewMessageBodyAC} from \"../../redux/dialogs-reducer\";\r\nimport {DispatchType, CombinedStateType} from \"../../redux/store\";\r\nimport {Dialogs} from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state: CombinedStateType) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch: DispatchType) => {\r\n    return {\r\n        NewMessageChange: (body: string) => {\r\n            dispatch(updateNewMessageBodyAC(body))\r\n        },\r\n            SendMessage: () => {\r\n        dispatch(sendMessageAC())\r\n    }\r\n    }\r\n}\r\n\r\nexport const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);","D:\\Web\\social-network\\src\\components\\Users\\UsersContainer.tsx",[],"D:\\Web\\social-network\\src\\components\\Dialogs\\Dialogs.tsx",[],"D:\\Web\\social-network\\src\\components\\Users\\Users.tsx",["110","111"],"import userAvatarDefault from \"../../assets/images/avatar-default.png\";\r\nimport styles from \"./Users.module.scss\";\r\nimport React from \"react\";\r\nimport {UserType} from \"../../redux/users-reducer\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {usersAPI} from \"../../api/api\";\r\n\r\ntype UsersPropsType = {\r\n    users: Array<UserType>\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    followingInProgress: []\r\n    onPageChanged: (pageNumber: number) => void\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n}\r\n\r\nexport const Users = (props: UsersPropsType) => {\r\n\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize)\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                {pages.map(p => <span onClick={(e) => {\r\n                    props.onPageChanged(p)\r\n                }}>{p}</span>)}\r\n            </div>\r\n            {props.users.map(u => <div key={u.id}>\r\n                <div>\r\n                    <NavLink to={'/profile/' + u.id}>\r\n                        <img src={u.photos.small != null ? u.photos.small : userAvatarDefault}\r\n                             className={styles.usersPhoto}\r\n                             alt='User image'/>\r\n                    </NavLink>\r\n                </div>\r\n                <div>\r\n                    {u.followed\r\n                        ? <button disabled={props.followingInProgress.some(id => id === u.id)}\r\n                                  onClick={() => {props.unfollow(u.id)}\r\n                                  }>Unfollow</button>\r\n                        : <button disabled={props.followingInProgress.some(id => id === u.id)}\r\n                                  onClick={() => {props.follow(u.id)}\r\n                                  }>Follow</button>}\r\n                </div>\r\n                <div>{u.name}</div>\r\n                <div>{u.status}</div>\r\n            </div>)}\r\n        </div>\r\n    )\r\n}","D:\\Web\\social-network\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx",[],"D:\\Web\\social-network\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx",["112"],"import React from 'react';\r\n\r\nimport {MyPosts} from \"./MyPosts\";\r\nimport {DispatchType, CombinedStateType} from \"../../../redux/store\";\r\nimport {addPost, updateNewPostText} from \"../../../redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state: CombinedStateType) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch: DispatchType) => {\r\n    return {\r\n        addPost: () => {\r\n            dispatch(addPost())\r\n        },\r\n        updateNewPostText: (text: string) => {\r\n            dispatch(updateNewPostText(text))\r\n        }\r\n    }\r\n}\r\n\r\nexport const MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);","D:\\Web\\social-network\\src\\components\\common\\Preloader\\Preloader.tsx",[],"D:\\Web\\social-network\\src\\components\\Dialogs\\DialogsItem\\DialogsItem.tsx",[],"D:\\Web\\social-network\\src\\components\\Dialogs\\Messages\\Messages.tsx",[],"D:\\Web\\social-network\\src\\components\\Profile\\MyPosts\\MyPosts.tsx",[],"D:\\Web\\social-network\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx",[],"D:\\Web\\social-network\\src\\components\\Profile\\ProfileContainer.tsx",[],"D:\\Web\\social-network\\src\\redux\\auth-reducer.ts",[],"D:\\Web\\social-network\\src\\components\\Header\\HeaderContainer.tsx",["113"],"import React from 'react';\r\nimport {Header} from \"./Header\";\r\nimport axios from \"axios\";\r\nimport {connect} from \"react-redux\";\r\nimport {AuthStateType, setAuthUserData} from \"../../redux/auth-reducer\";\r\nimport {CombinedStateType} from \"../../redux/store\";\r\n\r\nclass HeaderContainer extends React.Component<any, {}> {\r\n    componentDidMount() {\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/auth/me`, {\r\n            withCredentials: true\r\n        })\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    let {id, email, login} = response.data.data\r\n                    this.props.setAuthUserData(id, email, login)\r\n                }\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return <Header {...this.props}/>;\r\n    }\r\n}\r\nconst mapStateToProps = (state: CombinedStateType) =>  ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n})\r\n\r\nexport default connect(mapStateToProps, {setAuthUserData}) (HeaderContainer);","D:\\Web\\social-network\\src\\api\\api.ts",[],{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":1,"column":8,"nodeType":"120","messageId":"121","endLine":1,"endColumn":13},{"ruleId":"118","severity":1,"message":"122","line":6,"column":9,"nodeType":"120","messageId":"121","endLine":6,"endColumn":17},{"ruleId":"123","severity":1,"message":"124","line":38,"column":25,"nodeType":"125","endLine":40,"endColumn":48},{"ruleId":"118","severity":1,"message":"119","line":1,"column":8,"nodeType":"120","messageId":"121","endLine":1,"endColumn":13},{"ruleId":"118","severity":1,"message":"126","line":5,"column":9,"nodeType":"120","messageId":"121","endLine":5,"endColumn":22},"no-native-reassign",["127"],"no-negated-in-lhs",["128"],"@typescript-eslint/no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","'usersAPI' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'AuthStateType' is defined but never used.","no-global-assign","no-unsafe-negation"]