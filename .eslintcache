[{"D:\\Web\\samurai\\src\\index.tsx":"1","D:\\Web\\samurai\\src\\reportWebVitals.ts":"2","D:\\Web\\samurai\\src\\App.tsx":"3","D:\\Web\\samurai\\src\\components\\Navbar\\Navbar.tsx":"4","D:\\Web\\samurai\\src\\components\\Header\\Header.tsx":"5","D:\\Web\\samurai\\src\\redux\\profile-reducer.ts":"6","D:\\Web\\samurai\\src\\redux\\dialogs-reducer.ts":"7","D:\\Web\\samurai\\src\\redux\\store.ts":"8","D:\\Web\\samurai\\src\\components\\Profile\\Profile.tsx":"9","D:\\Web\\samurai\\src\\components\\Dialogs\\Dialogs.tsx":"10","D:\\Web\\samurai\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx":"11","D:\\Web\\samurai\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx":"12","D:\\Web\\samurai\\src\\components\\Dialogs\\DialogsItem\\DialogsItem.tsx":"13","D:\\Web\\samurai\\src\\components\\Dialogs\\Messages\\Messages.tsx":"14","D:\\Web\\samurai\\src\\components\\Profile\\MyPosts\\MyPosts.tsx":"15","D:\\Web\\samurai\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx":"16","D:\\Web\\samurai\\src\\components\\Dialogs\\DialogsContainer.tsx":"17"},{"size":705,"mtime":1611387911548,"results":"18","hashOfConfig":"19"},{"size":440,"mtime":1611346187149,"results":"20","hashOfConfig":"19"},{"size":856,"mtime":1611350261305,"results":"21","hashOfConfig":"19"},{"size":639,"mtime":1611346187139,"results":"22","hashOfConfig":"19"},{"size":201,"mtime":1611346187137,"results":"23","hashOfConfig":"19"},{"size":1329,"mtime":1611397806058,"results":"24","hashOfConfig":"19"},{"size":1441,"mtime":1611398821863,"results":"25","hashOfConfig":"19"},{"size":1426,"mtime":1611350889984,"results":"26","hashOfConfig":"19"},{"size":297,"mtime":1611350288539,"results":"27","hashOfConfig":"19"},{"size":1718,"mtime":1611396159582,"results":"28","hashOfConfig":"19"},{"size":476,"mtime":1611346187146,"results":"29","hashOfConfig":"19"},{"size":764,"mtime":1611350243716,"results":"30","hashOfConfig":"19"},{"size":452,"mtime":1611346187132,"results":"31","hashOfConfig":"19"},{"size":273,"mtime":1611346187134,"results":"32","hashOfConfig":"19"},{"size":1101,"mtime":1611346187142,"results":"33","hashOfConfig":"19"},{"size":563,"mtime":1611346187144,"results":"34","hashOfConfig":"19"},{"size":716,"mtime":1611350037735,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"13pz85x",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"38"},"D:\\Web\\samurai\\src\\index.tsx",[],["74","75"],"D:\\Web\\samurai\\src\\reportWebVitals.ts",[],"D:\\Web\\samurai\\src\\App.tsx",[],"D:\\Web\\samurai\\src\\components\\Navbar\\Navbar.tsx",[],"D:\\Web\\samurai\\src\\components\\Header\\Header.tsx",[],"D:\\Web\\samurai\\src\\redux\\profile-reducer.ts",[],"D:\\Web\\samurai\\src\\redux\\dialogs-reducer.ts",[],"D:\\Web\\samurai\\src\\redux\\store.ts",[],"D:\\Web\\samurai\\src\\components\\Profile\\Profile.tsx",[],"D:\\Web\\samurai\\src\\components\\Dialogs\\Dialogs.tsx",[],"D:\\Web\\samurai\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx",["76"],"import React from \"react\";\r\n\r\nexport const ProfileInfo = () => {\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img src=\"https://www.postplanner.com/hs-fs/hub/513577/file-2886416984-png/blog-files/facebook-profile-pic-vs-cover-photo-sq.png?width=250&height=250&name=facebook-profile-pic-vs-cover-photo-sq.png\" alt=\"profilePage photo\"/>\r\n            </div>\r\n            <div>\r\n                Profile description\r\n            </div>\r\n        </div>\r\n    )\r\n}","D:\\Web\\samurai\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx",["77"],"import React from 'react';\r\n\r\nimport {MyPosts} from \"./MyPosts\";\r\nimport {DispatchType, StateType} from \"../../../redux/store\";\r\nimport {addPostAC, updateNewPostTextAC} from \"../../../redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state: StateType) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch: DispatchType) => {\r\n    return {\r\n        addPost: () => {\r\n            dispatch(addPostAC())\r\n        },\r\n        updateNewPostText: (text: string) => {\r\n            dispatch(updateNewPostTextAC(text))\r\n        }\r\n    }\r\n}\r\n\r\nexport const MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);","D:\\Web\\samurai\\src\\components\\Dialogs\\DialogsItem\\DialogsItem.tsx",[],"D:\\Web\\samurai\\src\\components\\Dialogs\\Messages\\Messages.tsx",[],"D:\\Web\\samurai\\src\\components\\Profile\\MyPosts\\MyPosts.tsx",[],"D:\\Web\\samurai\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx",[],"D:\\Web\\samurai\\src\\components\\Dialogs\\DialogsContainer.tsx",["78"],"import React from 'react';\r\nimport {sendMessageAC, updateNewMessageBodyAC} from \"../../redux/dialogs-reducer\";\r\nimport {DispatchType, StateType} from \"../../redux/store\";\r\nimport {Dialogs} from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state: StateType) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch: DispatchType) => {\r\n    return {\r\n        NewMessageChange: (body: string) => {\r\n            dispatch(updateNewMessageBodyAC(body))\r\n        },\r\n            SendMessage: () => {\r\n        dispatch(sendMessageAC())\r\n    }\r\n    }\r\n}\r\n\r\nexport const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);",{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":7,"column":17,"nodeType":"85","endLine":7,"endColumn":241},{"ruleId":"86","severity":1,"message":"87","line":1,"column":8,"nodeType":"88","messageId":"89","endLine":1,"endColumn":13},{"ruleId":"86","severity":1,"message":"87","line":1,"column":8,"nodeType":"88","messageId":"89","endLine":1,"endColumn":13},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","@typescript-eslint/no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]