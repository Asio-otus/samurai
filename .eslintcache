[{"D:\\Web\\samurai\\src\\index.tsx":"1","D:\\Web\\samurai\\src\\reportWebVitals.ts":"2","D:\\Web\\samurai\\src\\App.tsx":"3","D:\\Web\\samurai\\src\\components\\Navbar\\Navbar.tsx":"4","D:\\Web\\samurai\\src\\components\\Header\\Header.tsx":"5","D:\\Web\\samurai\\src\\redux\\profile-reducer.ts":"6","D:\\Web\\samurai\\src\\redux\\dialogs-reducer.ts":"7","D:\\Web\\samurai\\src\\redux\\store.ts":"8","D:\\Web\\samurai\\src\\components\\Profile\\Profile.tsx":"9","D:\\Web\\samurai\\src\\components\\Dialogs\\Dialogs.tsx":"10","D:\\Web\\samurai\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx":"11","D:\\Web\\samurai\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx":"12","D:\\Web\\samurai\\src\\components\\Dialogs\\DialogsItem\\DialogsItem.tsx":"13","D:\\Web\\samurai\\src\\components\\Dialogs\\Messages\\Messages.tsx":"14","D:\\Web\\samurai\\src\\components\\Profile\\MyPosts\\MyPosts.tsx":"15","D:\\Web\\samurai\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx":"16","D:\\Web\\samurai\\src\\components\\Dialogs\\DialogsContainer.tsx":"17","D:\\Web\\samurai\\src\\components\\Users\\Users.tsx":"18","D:\\Web\\samurai\\src\\components\\Users\\UsersContainer.tsx":"19","D:\\Web\\samurai\\src\\redux\\users-reducer.ts":"20"},{"size":705,"mtime":1611387911548,"results":"21","hashOfConfig":"22"},{"size":440,"mtime":1611346187149,"results":"23","hashOfConfig":"22"},{"size":1036,"mtime":1611403529648,"results":"24","hashOfConfig":"22"},{"size":728,"mtime":1611399269350,"results":"25","hashOfConfig":"22"},{"size":201,"mtime":1611346187137,"results":"26","hashOfConfig":"22"},{"size":1621,"mtime":1611401596577,"results":"27","hashOfConfig":"22"},{"size":1902,"mtime":1611401596623,"results":"28","hashOfConfig":"22"},{"size":843,"mtime":1611404171554,"results":"29","hashOfConfig":"22"},{"size":297,"mtime":1611350288539,"results":"30","hashOfConfig":"22"},{"size":1728,"mtime":1611403609443,"results":"31","hashOfConfig":"22"},{"size":476,"mtime":1611346187146,"results":"32","hashOfConfig":"22"},{"size":780,"mtime":1611400041050,"results":"33","hashOfConfig":"22"},{"size":462,"mtime":1611403645401,"results":"34","hashOfConfig":"22"},{"size":283,"mtime":1611403658426,"results":"35","hashOfConfig":"22"},{"size":1111,"mtime":1611403687902,"results":"36","hashOfConfig":"22"},{"size":573,"mtime":1611403704234,"results":"37","hashOfConfig":"22"},{"size":732,"mtime":1611400041021,"results":"38","hashOfConfig":"22"},{"size":26225,"mtime":1611422577278,"results":"39","hashOfConfig":"22"},{"size":824,"mtime":1611403529675,"results":"40","hashOfConfig":"22"},{"size":1516,"mtime":1611422134728,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"13pz85x",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Web\\samurai\\src\\index.tsx",[],["87","88"],"D:\\Web\\samurai\\src\\reportWebVitals.ts",[],"D:\\Web\\samurai\\src\\App.tsx",[],"D:\\Web\\samurai\\src\\components\\Navbar\\Navbar.tsx",[],"D:\\Web\\samurai\\src\\components\\Header\\Header.tsx",[],"D:\\Web\\samurai\\src\\redux\\profile-reducer.ts",[],"D:\\Web\\samurai\\src\\redux\\dialogs-reducer.ts",[],"D:\\Web\\samurai\\src\\redux\\store.ts",[],"D:\\Web\\samurai\\src\\components\\Profile\\Profile.tsx",[],"D:\\Web\\samurai\\src\\components\\Dialogs\\Dialogs.tsx",[],"D:\\Web\\samurai\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx",["89"],"import React from \"react\";\r\n\r\nexport const ProfileInfo = () => {\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img src=\"https://www.postplanner.com/hs-fs/hub/513577/file-2886416984-png/blog-files/facebook-profile-pic-vs-cover-photo-sq.png?width=250&height=250&name=facebook-profile-pic-vs-cover-photo-sq.png\" alt=\"profilePage photo\"/>\r\n            </div>\r\n            <div>\r\n                Profile description\r\n            </div>\r\n        </div>\r\n    )\r\n}","D:\\Web\\samurai\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx",["90"],"import React from 'react';\r\n\r\nimport {MyPosts} from \"./MyPosts\";\r\nimport {DispatchType, CombinedStateType} from \"../../../redux/store\";\r\nimport {addPostAC, updateNewPostTextAC} from \"../../../redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state: CombinedStateType) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch: DispatchType) => {\r\n    return {\r\n        addPost: () => {\r\n            dispatch(addPostAC())\r\n        },\r\n        updateNewPostText: (text: string) => {\r\n            dispatch(updateNewPostTextAC(text))\r\n        }\r\n    }\r\n}\r\n\r\nexport const MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);","D:\\Web\\samurai\\src\\components\\Dialogs\\DialogsItem\\DialogsItem.tsx",[],"D:\\Web\\samurai\\src\\components\\Dialogs\\Messages\\Messages.tsx",[],"D:\\Web\\samurai\\src\\components\\Profile\\MyPosts\\MyPosts.tsx",[],"D:\\Web\\samurai\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx",[],"D:\\Web\\samurai\\src\\components\\Dialogs\\DialogsContainer.tsx",["91"],"import React from 'react';\r\nimport {sendMessageAC, updateNewMessageBodyAC} from \"../../redux/dialogs-reducer\";\r\nimport {DispatchType, StateType} from \"../../redux/store\";\r\nimport {Dialogs} from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state: StateType) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch: DispatchType) => {\r\n    return {\r\n        NewMessageChange: (body: string) => {\r\n            dispatch(updateNewMessageBodyAC(body))\r\n        },\r\n            SendMessage: () => {\r\n        dispatch(sendMessageAC())\r\n    }\r\n    }\r\n}\r\n\r\nexport const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);","D:\\Web\\samurai\\src\\components\\Users\\Users.tsx",["92"],"D:\\Web\\samurai\\src\\components\\Users\\UsersContainer.tsx",["93"],"import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {CombinedStateType, DispatchType} from \"../../redux/store\";\r\nimport {Users} from \"./Users\";\r\nimport {followAC, setUsersAC, unfollowAC, UserType} from \"../../redux/users-reducer\";\r\n\r\nlet mapStateToProps = (state: CombinedStateType) => {\r\n    return {\r\n        users: state.usersPage.users\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch: DispatchType) => {\r\n    return {\r\n        follow: (userId: number) => {\r\n            dispatch(followAC(userId))\r\n        },\r\n        unfollow: (userId: number) => {\r\n            dispatch(unfollowAC(userId))\r\n        },\r\n        setUsers: (users: Array<UserType>) => {\r\n            dispatch(setUsersAC(users))\r\n        }\r\n    }\r\n}\r\n\r\nexport const UsersContainer = connect(mapStateToProps, mapDispatchToProps)(Users)","D:\\Web\\samurai\\src\\redux\\users-reducer.ts",[],{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":7,"column":17,"nodeType":"100","endLine":7,"endColumn":241},{"ruleId":"101","severity":1,"message":"102","line":1,"column":8,"nodeType":"103","messageId":"104","endLine":1,"endColumn":13},{"ruleId":"101","severity":1,"message":"102","line":1,"column":8,"nodeType":"103","messageId":"104","endLine":1,"endColumn":13},{"ruleId":"105","severity":1,"message":"106","line":29,"column":29,"nodeType":"100","endLine":29,"endColumn":82},{"ruleId":"101","severity":1,"message":"102","line":1,"column":8,"nodeType":"103","messageId":"104","endLine":1,"endColumn":13},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","@typescript-eslint/no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]